#!/usr/bin/env python
#
# igcollect - java_jstat
#
# Copyright (c) 2017, InnoGames GmbH

from time import time
from argparse import ArgumentParser
from subprocess import check_output


def main():
    args = vars(parse_args())

    if args['option'] is None:
        args['option'] = get_options(args['jvm_install_path'])

    metrics = []
    for vm in args['vmid']:
        for option in args['option']:
            metrics.append(get_metrics(
                args['jvm_install_path'],
                args['prefix'],
                option,
                vm,
                args['interval'],
                args['count']
            ))


def parse_args():
    parser = ArgumentParser(
        description='java_jstat graphite metrics collector',
        epilog=(
            'Script to collect metrics using jstat about running JVMs and'
            'transform them into graphite format.'
        )
    )
    parser.add_argument(
        '--option',
        nargs='*',
        help='jstat option to collect e.g. gcutil or all if specified'
    )
    parser.add_argument(
        '--vmid',
        nargs='+',
        help='Java VM id to gather metrics from, check jps tool'
    )
    parser.add_argument(
        '--interval',
        default=1,
        help='Sampling interval in seconds'
    )
    parser.add_argument(
        '--count',
        default=4,
        help='Number of samples before terminating'
    )
    parser.add_argument(
        '--jvm-install-path',
        help='JVM installation path e.g. /usr/lib/jvm/jdk-8-oracle-x64',
        required=True
    )
    parser.add_argument(
        '--prefix',
        default='java.jstat',
        help='Prefix for graphite path'
    )

    return parser.parse_args()


def get_options(jvm_install_path):
    """Get all available jstat options -> list

    Arguments:
        jvm_install_path -- absolute path to jvm installation
    """

    command = '{}/bin/jstat -options'.format(jvm_install_path)
    for option in check_output(command, shell=True).splitlines():
        # passed argument usually don't start with a dash to keep it generic
        # we remove first dash which is printed by java help.
        yield option[1:]


def get_metrics(jvm_install_path, prefix, option, jvmid, interval, count):
    """Get metrics for option -> str

    Arguments:
        jvm_install_path -- absolute path to jvm installation
        prefix           -- prefix string
        option           -- jstat option to gather metrics for
        jvmid            -- jstat jvmid
        interval         -- jstat interval in seconds
        count            -- jstat count before terminating
    """

    command = '{}/bin/jstat -{} {} {} {}'.format(
        jvm_install_path,
        option,
        jvmid,
        interval,
        count
    )

    start = int(time())
    output = check_output(command, shell=True)
    rows = output.splitlines()
    header = rows.pop(0)
    h_columns = header.split()

    current_interval = 1
    for row in rows:
        columns = row.split()
        for h_index in range(0, len(h_columns)):
            print('{}.{}.{} {} {}'.format(
                prefix,
                option,
                h_columns[h_index].lower(),
                columns[h_index],
                start + current_interval * (h_index + 1)
            ))
        current_interval += 1


if __name__ == '__main__':
    main()
